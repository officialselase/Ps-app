# Generated by Django 5.2.4 on 2025-07-10 16:20

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(help_text='Unique URL-friendly identifier for the post', max_length=200, unique=True)),
                ('content', models.TextField()),
                ('author', models.CharField(max_length=100)),
                ('published_date', models.DateTimeField(auto_now_add=True)),
                ('updated_date', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to='blog_images/')),
            ],
            options={
                'ordering': ['-published_date'],
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the person sending the message', max_length=100)),
                ('email', models.EmailField(help_text='Email address for reply', max_length=254)),
                ('subject', models.CharField(blank=True, help_text='Subject of the message (optional)', max_length=200, null=True)),
                ('message', models.TextField(help_text='The content of the message')),
                ('submitted_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the message was sent')),
                ('is_read', models.BooleanField(default=False, help_text='Mark if the message has been read by an admin')),
            ],
            options={
                'ordering': ['-submitted_at'],
            },
        ),
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Name of the event', max_length=200)),
                ('slug', models.SlugField(help_text="A unique slug for the URL, e.g., 'annual-dental-camp'", max_length=200, unique=True)),
                ('description', models.TextField(help_text='Detailed description of the event')),
                ('event_date', models.DateTimeField(help_text='Date and time of the event')),
                ('location', models.CharField(help_text='Venue or online link for the event', max_length=255)),
                ('image', models.ImageField(blank=True, help_text='Optional image for the event', null=True, upload_to='event_images/')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the event is currently active/visible')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['event_date'],
            },
        ),
        migrations.CreateModel(
            name='NewsletterSubscriber',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(help_text='Email address of the subscriber', max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the user subscribed')),
                ('is_active', models.BooleanField(default=True, help_text='Whether the subscription is currently active')),
            ],
            options={
                'ordering': ['-subscribed_at'],
            },
        ),
        migrations.CreateModel(
            name='Resource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(help_text='Title of the downloadable resource', max_length=200)),
                ('description', models.TextField(blank=True, help_text='Brief description of the resource', null=True)),
                ('file', models.FileField(help_text='The actual file for download (PDFs, documents, etc.)', upload_to='resources/')),
                ('uploaded_at', models.DateTimeField(auto_now_add=True, help_text='Timestamp when the resource was uploaded')),
                ('is_public', models.BooleanField(default=True, help_text='Whether the resource is publicly available')),
            ],
            options={
                'ordering': ['-uploaded_at'],
            },
        ),
    ]
